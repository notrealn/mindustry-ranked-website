import { HTMLTable } from "@blueprintjs/core";
import axios from "axios";
import Head from "next/head";
import { useRouter } from "next/router";
import useSwr from "swr";
import AppBar from "../../components/appbar";
import styles from "../../styles/Home.module.css";

export default function Player() {
  const router = useRouter();
  const { id } = router.query;

  const { data, error } = useSwr(
    `https://ranked.ddns.net/api/player?playerId=${id}`,
    (url: string) => axios.get(url).then((res) => res.data)
  );

  const { data: matchData, error: matchError } = useSwr(
    `https://ranked.ddns.net/api/playerMatches?playerId=${id}&limit=10`,
    (url: string) => axios.get(url).then((res) => res.data)
  );

  if (typeof id !== "string") return <div>Invalid id type</div>;
  if (error || matchError) return <div>Failed to load.</div>;
  if (!data) return <div>Loading...</div>;

  return (
    <div className={styles.container}>
      <Head>
        <title>Homepage | Mindustry Ranked</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <AppBar />
        <h1>{data.name}</h1>
        Place on leaderboard: {data.place}
        <br />
        Last connection:
        {` ${((Date.now() - data.last_connect_timestamp) / 3600000).toFixed(
          1
        )} `}
        hours ago
        <HTMLTable>
          <thead>
            <tr>
              <th>MatchId</th>
              <th>Players</th>
              <th>Map</th>
              <th>Result</th>
              <th>Rating</th>
              <th>Duration</th>
            </tr>
          </thead>
          <tbody>
            {matchData.history.map((match: any, index: number) => {
              return (
                <tr key={index}>
                  <td>{match.match_id}</td>
                  {/* BEST PRACTICES ONLY :) */}
                  <td>
                    {Object.entries(match.players)
                      .map((player: any) => player[1].name)
                      .join(", ")}
                  </td>
                  <td>{match.map}</td>
                  <td>
                    {match.players[id].place === 1 ? "Victory" : "Defeat"}
                  </td>
                  <td>{`${match.players[id].rating_before} â†’ ${match.players[id].rating_after}`}</td>
                  <td>{(match.finished_at - match.started_at) / 360000}</td>
                </tr>
              );
            })}
          </tbody>
        </HTMLTable>
      </main>
    </div>
  );
}
// export async function getStaticProps(context: any) {
//   console.log(context.params);
//   return {
//     props: {}, // will be passed to the page component as props
//   };
// }
